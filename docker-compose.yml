services:
  db:
    image: postgres:15
    container_name: my_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - backend-network

  files:
    image: files:1.0.1
    ports:
      - "8020:8000"
    volumes:
      - ./storage:/app/storage
      - ./config.yaml:/config.yaml
    networks:
      - backend-network
    restart: always

  syncer:
    image: files:1.0.1
    command: python -m scripts.files_sync
    volumes:
      - ./storage:/app/storage
      - ./config.yaml:/config.yaml
    networks:
      - backend-network
    restart: always

  images:
    image: images:1.0.1
    ports:
      - "8030:8000"
    volumes:
      - ./tmp:/app/tmp
      - ./config.yaml:/config.yaml
    networks:
      - backend-network
    restart: always

  rabbit:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - backend-network

  task-worker:
    image: images:1.0.1
    restart: always
    command: python -m scripts.tasks_worker
    volumes:
      - ./tmp:/app/tmp
      - ./config.yaml:/config.yaml
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16